<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous" />
  <style>
    .createBtn {
      background-color: rgba(0, 0, 255, 0.716);
      color: rgba(255, 255, 255, 0.853);
    }

    .createBtn:hover {
      background-color: rgb(0, 0, 255);
      color: white;
    }

    .deleteBtn {
      background-color: rgba(255, 0, 0, 0.857);
      color: rgba(255, 255, 255, 0.853);
    }

    .deleteBtn:hover {
      background-color: rgba(255, 0, 0, 0.789);
      color: white;
    }

    .card {
      margin-top: 2rem;
      height: 600px;
    }

    .cardImg {
      height: 250px;
      width: 100%;
      border: 1px solid rgba(0, 0, 0, 0.36);
    }

    .card-body {
      padding: 15px;
    }

    .card-description {
      margin-top: 2%;
      height: 80%;
    }


    .description-details {
      width: 100%;
    }

    .stockM {
      margin-right: 2rem;
    }

    .stockM,
    .priceM {
      font-weight: 500;
    }

    .bold {
      font-weight: bold;
    }
  </style>
  <title>{{title}}</title>
</head>

<body>



  <div class="modal fade bd-example-modal-lg custom-modal" tabindex="-1" role="dialog"
    aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 500px;">
      <div class="modal-content">

      </div>
    </div>
  </div>
  </div>
  <div class="container">
    <div class="row" style="margin-top: 20px;">
      <div class="col-md-12">
        <button id="createProductButton" class="btn createBtn">Create product</button>
        <button id="deleteProductButton" class="btn deleteBtn">Delete product</button>
      </div>
    </div>
    <div class="container">
      <div class="row" id="products-container">
        {{#each products}}
        <div class="col-md-4 mb-4">
          <div class="card" key="{{this.id}}">
            <img src="{{this.thumbnail}}" class="cardImg" />
            <div class="card-body d-flex flex-column align-items-center justify-content-center">
              <h5 class="card-title">{{this.title}}</h5>
              <div class="card-description custom-description mt-4 d-flex align-items-center justify-content-center">
                <p class="card-text">{{this.description}}</p>
              </div>
              <div class="description-details d-flex justify-content-between ">
                <p class="ms-3 priceM">Price: <span class="bold"> ${{this.price}}</span></p>
                <p class="stockM">Stock: <span class="bold">{{this.stock}}</span></p>
              </div>
            </div>
          </div>
        </div>
        {{/each}}
      </div>
    </div>


    <script src="/socket.io/socket.io.js"></script>

    <script>
      const socket = io();

      socket.on('productAdded', function (product) {
        // Get the container for the products
        const productsContainer = document.getElementById('products-container');

        // Create a new product card
        const productCard = document.createElement('div');
        productCard.className = 'col-md-4 mb-4';
        productCard.innerHTML = `
  <div class="card" style="height: 560px; margin-top:80px;" key="${product._id}">
    <img src="${product.thumbnail}" class="card-img-top mx-auto" style="max-height: 289px;  max-width: 100%;" />
    <div class="card-body d-flex flex-column align-items-center">
      <h5 class="card-title">${product.title}</h5>
      <div class="card-description custom-description">
        <p class="card-text">${product.description}</p>
        <div class="description-details">
          <p>Price: $${product.price}</p>
          <p>Stock: ${product.stock}</p>
        </div>
      </div>
    </div>
  </div>
`;

        // Add the new product card to the container
        productsContainer.appendChild(productCard);
      });

      socket.on('productUpdated', function (updatedProduct) {
        // Find the product in your UI by its ID
        const productCard = document.querySelector(`div[key='${updatedProduct._id}']`);

        // Update the product information
        productCard.querySelector('.card-title').textContent = updatedProduct.title;
        productCard.querySelector('.card-text').textContent = updatedProduct.description;
        productCard.querySelector('.description-details p:nth-child(1)').textContent = `Price: $${updatedProduct.price}`;
        productCard.querySelector('.description-details p:nth-child(2)').textContent = `Stock: ${updatedProduct.stock}`;
      });

      socket.on('productDeleted', function (deletedProductId) {
        // Find the product in your UI by its ID
        const productCard = document.querySelector(`div[key='${deletedProductId}']`);

        // Remove that element
        productCard.remove();
      });
    </script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
      crossorigin="anonymous"></script>
</body>

</html>